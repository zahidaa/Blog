<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>wordpress on hackerwasii</title>
    
    
    
    <link>https://hackerwasii.com/tags/wordpress/</link>
    <description>Recent content in wordpress on hackerwasii</description>
    <generator>hackerwasii.com</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 26 May 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://hackerwasii.com/tags/wordpress/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Exploiting PHP deserialization üîê</title>
      <link>https://hackerwasii.com/posts/php-deserialization/</link>
      <pubDate>Wed, 26 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hackerwasii.com/posts/php-deserialization/</guid>
      <description>
        
          
          
          
        
        
        
          Intro to Insecure deserialization Serialization is when an object in a programming language (say, a Java or PHP object) is converted into a format that can be stored or transferred. Whereas deserialization refers to the opposite: it‚Äôs when the serialized object is read from a file or the network and converted back into an object.
Insecure deserialization vulnerabilities happen when applications deserialize objects without proper sanitization. An attacker can then manipulate serialized objects to change the program‚Äôs flow.
          
        
        </description>
    </item>
    
  </channel>
</rss>